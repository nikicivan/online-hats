{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from './products.types';\nimport axios from 'axios';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await axios.post('/api/products', product, {\n        headers: {\n          Authorization: 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await axios.put('/api/products/' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    console.log(data);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/products/\" + productId, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };","map":{"version":3,"sources":["E:/04-PROJEKTI/online-hats/frontend/src/redux/product/products.actions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","Authorization","token","put","detailsProduct","productId","console","log","deleteProduct","delete","success"],"mappings":"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","sourcesContent":["import { \r\n\tPRODUCT_LIST_REQUEST, \r\n\tPRODUCT_LIST_SUCCESS, \r\n\tPRODUCT_LIST_FAIL,\r\n\tPRODUCT_DETAILS_REQUEST,\r\n\tPRODUCT_DETAILS_SUCCESS,\r\n\tPRODUCT_DETAILS_FAIL,\r\n\tPRODUCT_SAVE_REQUEST,\r\n\tPRODUCT_SAVE_SUCCESS,\r\n\tPRODUCT_SAVE_FAIL,\r\n\tPRODUCT_DELETE_REQUEST,\r\n\tPRODUCT_DELETE_SUCCESS,\r\n\tPRODUCT_DELETE_FAIL \r\n} from './products.types';\r\n\r\nimport axios from 'axios';\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_LIST_REQUEST });\r\n\t\tconst { data } = await axios.get(\"/api/products\");\r\n\t\tdispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: PRODUCT_LIST_FAIL, payload: error.message});\r\n\t}\r\n};\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\r\n\t\tconst { userSignin: {userInfo} } = getState();\t\t\r\n\t\tif(!product._id) {\t\t\t\r\n\t\t\tconst { data } = await axios.post('/api/products', product, {\r\n\t\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer' + userInfo.token\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tdispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n\t\t} else {\t\t\t\r\n\t\t\tconst { data } = await axios.put('/api/products/' + product._id, product, {\r\n\t\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer' + userInfo.token\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tdispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\r\n\t\t}\t\t\t\t\r\n\t} catch (error) {\r\n\t\tdispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\r\n\t}\r\n};\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n\t\tconst { data } = await axios.get(\"/api/products/\" + productId);\r\n\t\tconsole.log(data);\r\n\t\tdispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message});\r\n\t}\r\n}; \r\n\r\nconst deleteProduct = (productId) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tconst {userSignin: {userInfo}} = getState();\r\n\t\tdispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n\t\tconst { data } = await axios.delete(\"/api/products/\" + productId, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer' + userInfo.token\r\n\t\t\t}\r\n\t\t});\r\n\t\tdispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\r\n\t} catch (error) {\r\n\t\tdispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message});\r\n\t}\r\n};\r\n\r\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };"]},"metadata":{},"sourceType":"module"}