{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL } from './order.types.js';\n\nconst createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data: {\n        data: newOrder\n      }\n    } = await axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: newOrder\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: MY_ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDER_LIST_FAIL,\n      payload: error\n    });\n  }\n};\n\nconst listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get('/api/orders', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error\n    });\n  }\n};\n\nconst detailsOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get('/api/orders/' + orderId, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error\n    });\n  }\n};\n\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n      payload: paymentResult\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.put('/api/orders/' + order._id + '/pay', paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error\n    });\n  }\n};\n\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders };","map":{"version":3,"sources":["E:/04-PROJEKTI/online-hats/frontend/src/redux/order/order.actions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","MY_ORDER_LIST_REQUEST","MY_ORDER_LIST_SUCCESS","MY_ORDER_LIST_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","newOrder","post","headers","Authorization","token","error","message","listMyOrders","get","listOrders","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","detailsOrder","orderId","payOrder","paymentResult","put","_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nimport { \r\n\tORDER_CREATE_REQUEST, \r\n\tORDER_CREATE_SUCCESS, \r\n\tORDER_CREATE_FAIL,\r\n\tORDER_DETAILS_REQUEST,\r\n\tORDER_DETAILS_SUCCESS,\r\n\tORDER_DETAILS_FAIL,\r\n\tORDER_PAY_REQUEST,\r\n\tORDER_PAY_SUCCESS,\r\n\tORDER_PAY_FAIL,\r\n\tMY_ORDER_LIST_REQUEST,\r\n\tMY_ORDER_LIST_SUCCESS,\r\n\tMY_ORDER_LIST_FAIL\r\n} from './order.types.js';\r\n\r\nconst createOrder = (order) => async (dispatch, getState) => {\t\r\n\ttry {\r\n\t\tdispatch({type: ORDER_CREATE_REQUEST, payload: order});\r\n\t\tconst { userSignin: {userInfo} } = getState();\r\n\t\tconst {data: {data: newOrder}} = await axios.post('/api/orders', order, { \r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t}); \r\n\tdispatch({type: ORDER_CREATE_SUCCESS, payload: newOrder});\r\n\t} catch(error) {\r\n\t  dispatch({type: ORDER_CREATE_FAIL, payload: error.message});\t\r\n\t}\t\r\n};\r\n\r\nconst listMyOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: MY_ORDER_LIST_REQUEST });\r\n\t\tconst { userSignin: {userInfo} } = getState();\r\n\t\tconst { data } = await axios.get('/api/orders/mine', {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t});\r\n\t\tdispatch({type: MY_ORDER_LIST_SUCCESS, payload: data});\r\n\t} catch(error) {\r\n\t\tdispatch({type: MY_ORDER_LIST_FAIL, payload: error});\r\n\t}\t\r\n};\r\n\r\nconst listOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({ type: ORDER_LIST_REQUEST });\r\n\t\tconst { userSignin: {userInfo} } = getState();\r\n\t\tconst { data } = await axios.get('/api/orders', {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t});\r\n\t\tdispatch({type: ORDER_LIST_SUCCESS, payload: data});\r\n\t} catch(error) {\r\n\t\tdispatch({type: ORDER_LIST_FAIL, payload: error});\r\n\t}\t\r\n};\r\n\r\nconst detailsOrder = (orderId) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({type: ORDER_DETAILS_REQUEST, payload: orderId});\r\n\t\tconst { userSignin: {userInfo} } = getState();\r\n\t\tconst { data } = await axios.get('/api/orders/' + orderId, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t});\r\n\t\tdispatch({type: ORDER_DETAILS_SUCCESS, payload: data});\r\n\t} catch(error) {\r\n\t\tdispatch({type: ORDER_DETAILS_FAIL, payload: error});\r\n\t}\t\r\n};\r\n\r\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({type: ORDER_PAY_REQUEST, payload: paymentResult});\r\n\t\tconst { userSignin: {userInfo} } = getState();\r\n\t\tconst { data } = await axios.put('/api/orders/' + order._id + '/pay', paymentResult, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`\r\n\t\t\t}\r\n\t\t});\r\n\t\tdispatch({type: ORDER_PAY_SUCCESS, payload: data});\r\n\t} catch(error) {\r\n\t\tdispatch({type: ORDER_PAY_FAIL, payload: error});\r\n\t}\t\r\n}\r\n\r\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders }"]},"metadata":{},"sourceType":"module"}